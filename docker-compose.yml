services:
  hackaton-gateway:
    image: 'hackaton-gateway:0.0.1-SNAPSHOT'
    build:
      context: ../hackaton-gateway
    container_name: hackaton-gateway
    ports:
      - 8080:8080
    depends_on:
      hackaton-discovery-service:
        condition: service_started
    restart: always
    environment:
      - eureka.client.serviceUrl.defaultZone=http://hackaton-discovery-service:8761/eureka/

  hackaton-discovery-service:
    image: 'hackaton-discovery-service:0.0.1-SNAPSHOT'
    build:
      context: ../hackaton-discovery-service
    container_name: hackaton-discovery-service
    ports:
      - 8761:8761
    restart: always

  hackaton-autenticacao-app:
    image: 'hackaton-autenticacao-app:0.0.1-SNAPSHOT'
    build:
      context: ../hackaton-autenticacao-app
    container_name: hackaton-autenticacao-app
    ports:
      - 8081:8081
    restart: always
    env_file:
      - group58.env
    depends_on:
      db:
        condition: service_healthy
      hackaton-discovery-service:
        condition: service_started
    environment:
      - DATASOURCE_URL=jdbc:postgresql://db:5432/db_autenticacao
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - eureka.client.serviceUrl.defaultZone=http://hackaton-discovery-service:8761/eureka/

  hackaton-cartao-app:
    image: 'hackaton-cartao-app:0.0.1-SNAPSHOT'
    build:
      context: ../hackaton-cartao-app
    container_name: hackaton-cartao-app
    ports:
      - 8082:8082
    restart: always
    env_file:
      - group58.env
    depends_on:
      db:
        condition: service_healthy
      hackaton-discovery-service:
        condition: service_started
    environment:
      - DATASOURCE_URL=jdbc:postgresql://db:5432/db_cartao
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - eureka.client.serviceUrl.defaultZone=http://hackaton-discovery-service:8761/eureka/
      - API_KEY=http://hackaton-clientes-app:8083/api/cliente/validarCPF/


  hackaton-clientes-app:
    image: 'hackaton-clientes-app:0.0.1-SNAPSHOT'
    build:
      context: ../hackaton-clientes-app
    container_name: hackaton-clientes-app
    ports:
      - 8083:8083
    restart: always
    env_file:
      - group58.env
    depends_on:
      db:
        condition: service_healthy
      hackaton-discovery-service:
        condition: service_started
    environment:
      - DATASOURCE_URL=jdbc:postgresql://db:5432/db_clientes
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - eureka.client.serviceUrl.defaultZone=http://hackaton-discovery-service:8761/eureka/

  hackaton-pagamentos-app:
    image: 'hackaton-pagamentos-app:0.0.1-SNAPSHOT'
    build:
      context: ../hackaton-pagamentos-app
    container_name: hackaton-pagamentos-app
    ports:
      - 8084:8084
    restart: always
    env_file:
      - group58.env
    depends_on:
      db:
        condition: service_healthy
      hackaton-discovery-service:
        condition: service_started
    environment:
      - DATASOURCE_URL=jdbc:postgresql://db:5432/db_pagamentos
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - eureka.client.serviceUrl.defaultZone=http://hackaton-discovery-service:8761/eureka/

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - 5432:5432
    env_file:
      - group58.env
    environment:
      POSTGRES_USERNAME: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: db_clientes, db_pagamentos, db_cartao, db_autenticacao
    volumes:
      - ./scripts/multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
      - ./postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5